~~ Atualizações ~~

V1.0 - 29/08/2023
	Commit inicial. Definido as classes de modelo e a especialização do médico 
	pelo enum AreaMedico
	
V1.1 - 29/08/2023
	Adicionado a classe abstrata Pessoa. sendo Pessoa pai, temos todas as 
	outras classes como filhas, portanto, herança implementada
	
	Adicionado as áreas de especialização no enum AreaMedico
	Adicionado os pacotes para criar interfaces, threads, arquivos,
	 javamail, swing, datetime
	
	Adicionado os pacotes para iniciar a conexão com o banco Oracle, a classe
	para fazer as operações CRUD, a DAO
	
	Adicionado o construtor para o paciente. Na hora do cadastro, é preciso
	preencher os dados do construtor
	
V1.2 - 31/08/2023	
	Adicionado mais classes de modelo e de operações
	
V1.3 - 01/09/2023
	Introduzindo a tela de cadastro com swing
	
	Por enquanto: 
	 - Adicionado duas telas para inserir todos os dados do paciente
	 - Falta implementar o comportamento do botão salvar
	 
V1.3.2 - 01/09/2023
	Mini atualização: adicionado comportamento ao botao Salvar na tela de cadastro
	
V1.3.3 - 01/09/2023
	Mini atualização: 
	- resgatando os dados do TextField
	- organizando a classe TelaCadastro
	- comentando por "//" o que será implementado no código no futuro
	
V1.4 - 01/09/2023
	Criado a tela de login
	
V1.5 - 01/09/2023
	Implementado a validação de cadastro com o código enviado pelo email - JavaMail

V1.5.2 - 02/09/2023
	FIX no envio de email
	
V1.5.3 - 02/09/2023
	Classes do JDBC alterado de Oracle para PostgreSQL. 
	Alterado a tela inicial
	
V1.6 - 03/09/2023
	JDBC e classe DAO implementadas, apenas a operação insert por enquanto.
	O cadastro do paciente está gravando no banco de dados PostgreSQL
	Adicionado uma lista de pendências no formato .txt dentro do projeto
	
V1.7 - 03/09/2023
	Adicionado a validação de login, agora o usuário só pode 
	logar se a conta dele estiver gravada no banco de dados
	
	Revisada no código
	Remoção da coluna/atributo "username", agora será o cpf
	Remoção da segunda página de cadastro, agora é tudo em uma só
	
V1.7.2 - 03/09/2023
	FIX no login. Antes causava NullPointerException quando não encontrava
	a conta no banco de dados, implementado um tratamento de exceção 
	para indicar que não há essa conta no banco de dados

V1.8 - 03/09/2023
	Criado um contador de erros que o usuário pode cometer ao tentar logar-se
	Criado um bloqueio de conta caso o usuário errar o login 3 vezes
	Criado um tempo limite para ficar na tela de login, 30 segundos
	
V1.8.2 - 03/09/2023
	FIX no bloqueio de conta
	Redirecionamento para um lugar apenas quando o usuário passar nas validações de login
	o redirecionamento não acontece quando ele termina o cadastro e nem com conta inválida
	
V1.8.3 - 03/09/2023
	FIX no bloqueio de conta -> agora quando o limite de tempo de login for alcançado
	o programa informa o usuário que o tempo for extendido e o programa se encerra
	Adicionado a Tela Inicial
	
	Melhorado o Login:
		- Campo de senha agora é protegido com *****
		- Customizado a tela de login
		
V1.8.4 - 04/09/2023
	Resgatando todos os dados da conta do usuário quando ele loga e apresentando
	para ele os dados da sua conta
	
	próxima atualização -> botão pro usuário editar os dados da sua conta
	
V1.8.5 - 05/09/2023
	Começando a tela de editar dados do usuário
	Exception customizada (falta introduzir ela no insert DAO)
	Enum que tem a TABELA e a PK de forma agrupada pras consultas ficarem dinâmicas
	
V1.8.6 - 05/09/2023
	Melhoria no código:
		- Implementado a Exception Customizada: 
		   agora quando não encontra nenhum usuário no Banco de dados, 
		   o programa retorna uma Exception e não null igual a antes
		  
		- Iniciado os Testes Unitários:
			feito dois testes unitários na classe de buscar do DAO.
			ambos os testes passaram: Antes da adição da 
			Exception Customizada e depois

V1.8.7 - 05/09/2023
	Melhoria no código:
		- Criado exceptions para todo tipo de ação indesejada feita pelo usuário
		- Criado vários testes unitários para as operações DAO
		
V1.9 - 07/09/2023
	Integrando o sistema com o HTML feito pelo João no JavaMail (incompleto)
	Aderindo à boas práticas: Criado uma interface genérica para 
		implementar as operações DAO em todas as classes de modelo 
	
V2.0 - 08/09/2023, 09/09/2023, 10/09/2023 & 11/09/2023
	Removido a enum BuscarBanco
	Criado um enum de categorias de medicamentos
	Criado o insert de medicamento no banco
	Criado um teste unitário para testar insert/update de medicamento
	Criado um teste unitário para testar a inserção caso o objeto esteja null
	Novas pendências
	Deixando as Exceptions genéricas para encaixar em todas as classes
	Concluído o teste unitário no createPaciente
	Comentado dentro das classes os comportamentos que elas farão em breve
	Criado a operação no banco de dados para "buscar por categoria+nome" e "update"
	Criado um comportamento onde caso já existir um registro com o mesmo
		nome e categoria, é somado a quantidade de medicamento total
	Criado tipos de usúario, agora não é apenas Paciente
	Ao indicar o tipo de usuário, ao tentar logar-se, o programa busca no banco de dados
		na tabela do respectivo usuário escolhido e não em outros
	Deixando o set e o get das chaves primárias das classes de modelo mais genéricas
	Implementado o findById do MedicoDAO
	Agora a tela inicial é única para cada tipo de usuário
	
V2.1 - 12/09/2023
	Aplicado o JFrame na tela inicial
	Arrumado alguns bugs da tela inicial
	Gerando Exception caso o usuário feche a janela do login sem informar o login e senha
	
V3.0 - 12/09/2023 & 13/09/2023
	Iniciado a solicitação de exame(consulta) na tela inicial do paciente
	Alterado as enums TipoMedicamento e AreaMedico para conectá-las
	Criado a tabela no BD para restringir os tipos de medicamentos que os médicos receitam
	Protegendo os DAO's SQL de SQLInjection
	Criado a tela para o paciente fazer a sua consulta
	Criado a tela para o médico visualizar todas as consultas
	Criado uma function no banco de dados que retorna a quantidade de pacientes
		para cada especialização
	Criado uma operação de Atendimento onde o Visualizar Consultas para os medicos
		retorne só as consultas de sua área
	Criado um método que retorna para o paciente o id da consulta que foi cadastrada
	Criado um método que verifica se o mesmo paciente já fez a mesma descrição de problema
		para o mesmo profissional